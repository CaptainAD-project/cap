<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.captain.mapper.ReviewMapper">

    <sql id="search">
        <if test="search != null">
            <if test="search.keyword != null">
                <trim prefix="and (" suffix=")">
                    review_title like concat('%',#{search.keyword},'%') or review_content like concat('%',#{search.keyword},'%')
                </trim>
            </if>
            <if test="search.categorys != null">
                <trim prefix="and (" suffix=")" prefixOverrides="or">
                    <foreach item="category" collection="search.categorys">
                        <trim prefix="or">
                            review_category like concat('%', #{category}, '%')
                        </trim>
                    </foreach>
                </trim>
            </if>
        </if>
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="reviewId">
        insert into tbl_review
        (review_title, review_content, review_category, review_grade, member_id, review_id)
        values(#{reviewTitle}, #{reviewContent}, #{reviewCategory}, #{reviewGrade}, #{memberId}, #{reviewId})
    </insert>

    <update id="update">
        update tbl_review
        set review_title= #{reviewTitle}, review_content = #{reviewContent} , review_category = #{reviewCategory}, review_grade= #{reviewGrade}
        where review_id= #{reviewId}
    </update>

    <select id="select" resultType="reviewVO">
        select review_id, review_title, review_content, review_category, review_register_date, review_update_date, review_grade, member_id
        from tbl_review
        where review_id = #{reviewId}
    </select>

    <delete id="delete">
        delete from tbl_review
        where review_id = #{reviewId}
    </delete>

    <select id="selectAll" resultType="reviewVO">
        select review_id, review_title, review_content, review_category, review_register_date, review_update_date, review_grade, member_id
        from tbl_review
        order by review_id
        desc
        limit #{cri.offset}, #{cri.rowCount}
    </select>

    <select id="selectDTO" resultType="reviewDTO">
        select r.review_id, review_title, review_content, review_category, review_register_date, review_update_date,
        review_grade, m.member_id, member_name, member_nickname, member_file_original_name, member_file_uuid,
        member_file_path, member_file_size, member_file_type
        from tbl_review r right join tbl_member m
        on r.member_id = m.member_id
        where review_id = #{reviewId}
    </select>
    <select id="selectByMemberId" resultType="reviewDTO">
        select r.review_id, review_title, review_content, review_category, review_register_date, review_update_date,
        review_grade, m.member_id, member_name, member_nickname, member_file_original_name, member_file_uuid,
        member_file_path, member_file_size, member_file_type
        from tbl_review r right join tbl_member m
        on r.member_id = m.member_id
        where m.member_id = #{memberId}
    </select>

    <select id="getCount" resultType="long">
        select count(review_id) from tbl_review where member_id = #{memberId}
    </select>

    <select id="getTotal" resultType="_int">
        select count(review_id) from tbl_review
    </select>

</mapper>