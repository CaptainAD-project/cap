<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.captain.mapper.GroupMapper">

    <!-- 멤버가 개설한 탐험대 찾아보기 -->
    <select id="selectMyRecruit" resultType="groupDTO">
        select m.member_id, member_identification, member_password, member_email, member_name,
            member_nickname, member_phone, member_birth, member_gender, member_status,
            member_random_key, member_file_original_name, member_file_uuid, member_file_path,
            member_file_size, member_file_type, g.group_id, group_name, group_max_value,
            group_category, group_title, group_content, group_location, group_register_date,
            group_end_date,	group_meet_date, group_file_original_name, group_file_uuid,
            group_file_path, group_file_size, group_file_type, group_captain
        from tbl_member m join tbl_group g on g.group_captain = m.member_id
        where m.member_id = #{memberId}
        limit #{cri.offset}, #{cri.rowCount}
    </select>

    <!-- 멤버가 개설한 탐험대 갯수 가져오기 -->
    <select id="selectCountMyRecruit" resultType="_int">
        select count(group_id)
        from tbl_member m join tbl_group g on g.group_captain = m.member_id
        where m.member_id = #{memberId}
    </select>

    <select id="selectCountAll" resultType="_int">
        select count(group_id)
        from tbl_group
    </select>

    <!-- 멤버가 가입한 탐험대의 게시자와 탐험대의 정보 가져오기 -->
    <select id="selectParticipateRecruit" resultType="groupDTO">
        select m.member_id, member_identification, member_password, member_email, member_name,
            member_nickname, member_phone, member_birth, member_gender, member_status,
            member_random_key, member_file_original_name, member_file_uuid, member_file_path,
            member_file_size, member_file_type, g.group_id, group_name, group_max_value,
            group_category, group_title, group_content, group_location, group_register_date,
            group_end_date,	group_meet_date, group_file_original_name, group_file_uuid,
            group_file_path, group_file_size, group_file_type, group_captain
        from tbl_member m join tbl_group g on m.member_id = g.group_captain
        where g.group_id in (select group_id from tbl_member_group where member_id = #{memberId})
        limit #{cri.offset}, #{cri.rowCount}
    </select>

    <!-- 멤버가 참가한 탐험대의 갯수 가져오기 -->
    <select id="selectCountMyParticipate" resultType="_int">
        select count(group_id)
        from tbl_member m join tbl_group g on m.member_id = g.group_captain
        where g.group_id in (select group_id from tbl_member_group where member_id = #{memberId})
    </select>
    <!-- group 개설 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="groupId">
        insert into tbl_group
        (group_name, group_max_value, group_category, group_title, group_content, group_location,
        group_end_date, group_meet_date, group_file_original_name, group_file_uuid, group_file_path, group_file_size,
        group_file_type, group_captain)
        values(#{groupName}, #{groupMaxValue}, #{groupCategory}, #{groupTitle}, #{groupContent}, #{groupLocation},
        #{groupEndDate}, #{groupMeetDate}, #{groupFileOriginalName}, #{groupFileUuid}, #{groupFilePath}, #{groupFileSize}, #{groupFileType}, #{groupCaptain})
    </insert>

    <!-- groupId로 그룹 조회 -->
    <select id="selectByGroupId" resultType="groupVO">
        select group_id, group_name, group_max_value, group_category, group_title, group_content, group_location, group_register_date,
        group_end_date, group_meet_date, group_file_original_name, group_file_uuid, group_file_path, group_file_size,
        group_file_type, group_captain from tbl_group
        where group_id = #{groupId}
    </select>

    <select id="selectAll" resultType="groupVO">
        select group_Id, group_name, group_max_value, group_category, group_title, group_content, group_location, group_register_date,
        group_end_date, group_meet_date, group_file_original_name, group_file_uuid, group_file_path, group_file_size,
        group_file_type, group_captain from tbl_group
    </select>

    <!-- groupCaptain으로 그룹 조회 -->
    <select id="selectByCaptain" resultType="groupVO">
        select group_name, group_max_value, group_category, group_title, group_content, group_location, group_register_date,
        group_end_date, group_meet_date, group_file_original_name, group_file_uuid, group_file_path, group_file_size,
        group_file_type, group_captain from tbl_group
        where group_id = #{groupId}
    </select>

    <!-- 그룹 정보 수정 -->
    <update id="update">
        update tbl_group
        set group_name= #{groupName}, group_title = #{groupTitle}, group_content = #{groupContent} , group_location = #{groupLocation}, group_category= #{groupCategory},
        group_max_value= #{groupMaxValue}, group_end_date= #{groupEndDate}, group_meet_date= #{groupMeetDate}, group_file_original_name= #{groupFileOriginalName},
        group_file_uuid= #{groupFileUuid}, group_file_path= #{groupFilePath}, group_file_size= #{groupFileSize}, group_file_type= #{groupFileType},
        group_captain= #{groupCaptain}
        where group_id= #{groupId}
    </update>

    <!-- 그룹 정보 수정 By admin -->
    <update id="updateByAdmin">
        update tbl_group
        set  group_category= #{groupCategory}, group_max_value= #{groupMaxValue}
        where group_id= #{groupId}
    </update>

    <!-- 그룹 삭제 -->
    <delete id="delete">
        delete from tbl_group
        where group_id = #{groupId}
    </delete>

    <!-- memberId로 그룹 id 조회 -->
    <select id="selectIdByMemberId" resultType="long">
        select group_id from tbl_group
        where member_id = #{memberId}
    </select>

    <!-- groupCaptain으로 그룹 id 조회-->
    <select id="selectIdByCaptain" resultType="long">
        select group_id from tbl_group
        where group_captain = #{groupCaptain}
    </select>

    <select id="selectCount" resultType="_int">
        select count(group_id) from tbl_group
        where group_id = #{groupId}
    </select>

    <!-- 모든 탐험대 조회 -->
    <select id="selectAllGroup" resultType="groupDTO">
        select m.member_id, member_identification, member_password, member_email, member_name,
        member_nickname, member_phone, member_birth, member_gender, member_status,
        member_random_key, member_file_original_name, member_file_uuid, member_file_path,
        member_file_size, member_file_type, g.group_id, group_name, group_max_value,
        group_category, group_title, group_content, group_location, group_register_date,
        group_end_date,    group_meet_date, group_file_original_name, group_file_uuid,
        group_file_path, group_file_size, group_file_type, group_captain
        from tbl_member m join tbl_group g on m.member_id = g.group_captain
        <if test="keyword!=null">
            where group_title like concat('%',#{keyword},'%')
        </if>
        <if test="category != null">
            and group_category like concat('%',#{category},'%')
        </if>
        order by group_id desc
        limit #{cri.offset}, #{cri.rowCount}
    </select>

    <!-- 탐험대의 총 갯수 가져오기 -->
    <select id="countAllGroup" resultType="_int">
        select count(group_id) from tbl_member m join tbl_group g on m.member_id = g.group_captain
        <if test="keyword!=null">
            where group_title like concat('%',#{keyword},'%')
        </if>
        <if test="category != null">
            and group_category like concat('%',#{category},'%')
        </if>
    </select>

    <!-- 메인에 띄울 탐험대 -->
    <select id="selectMainGroup" resultType="groupDTO">
        select m.member_id, member_identification, member_password, member_email, member_name,
                member_nickname, member_phone, member_birth, member_gender, member_status,
                member_random_key, member_file_original_name, member_file_uuid, member_file_path,
                member_file_size, member_file_type, g.group_id, group_name, group_max_value,
                group_category, group_title, group_content, group_location, group_register_date,
                group_end_date, group_meet_date, group_file_original_name, group_file_uuid,
                group_file_path, group_file_size, group_file_type, group_captain
        from tbl_member m join tbl_group g on m.member_id = g.group_captain
        <if test="category != null">
            and group_category like concat('%',#{category},'%')
        </if>
        order by group_id desc
        limit 0, 4
    </select>

    <!-- 관리자 페이지 탐험대 상세보기 -->
    <select id="selectGroupDTO" resultType="groupDTO">
        select m.member_id, member_identification, member_password, member_email, member_name,
                member_nickname, member_phone, member_birth, member_gender, member_status,
                member_random_key, member_file_original_name, member_file_uuid, member_file_path,
                member_file_size, member_file_type, g.group_id, group_name, group_max_value,
                group_category, group_title, group_content, group_location, group_register_date,
                group_end_date, group_meet_date, group_file_original_name, group_file_uuid,
                group_file_path, group_file_size, group_file_type, group_captain
        from tbl_member m join tbl_group g on m.member_id = g.group_captain
        where group_id = #{group_id}
    </select>
</mapper>