<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.captain.mapper.MemberMapper">
    <select id="select" resultType="memberVO">
        select member_id, member_identification, member_password, member_email, member_name, member_nickname, member_phone, date_format(member_birth, '%Y.%m.%d'), member_gender, member_status, member_file_original_name, member_file_uuid, member_file_path, member_file_size, member_file_type
        from tbl_member
        where member_identification = #{memberIdentification} and member_password = #{memberPassword}
    </select>

    <select id="selectMemberId" resultType="long">
        select member_id
        from tbl_member
        where member_identification = #{memberIdentification} and member_password = #{memberPassword}
    </select>

    <!-- 회원 검색하기 -->
    <select id="selectMember" resultType="memberVO">
        select member_id, member_identification, member_password, member_email, member_name, member_nickname, member_phone, member_birth, member_gender, member_status, member_file_original_name, member_file_uuid, member_file_path, member_file_size, member_file_type
        from tbl_member
        where member_id = #{memberId}
    </select>

    <!-- 이메일로 회원 검색 -->
    <select id="selectMemberByEmail" resultType="memberVO">
        select member_id, member_identification, member_password, member_email, member_name, member_nickname, member_phone, member_birth, member_gender, member_status, member_file_original_name, member_file_uuid, member_file_path, member_file_size, member_file_type
        from tbl_member
        where member_email = #{memberEmail}
    </select>

    <insert id="insert">
        insert into tbl_member (member_identification, member_password, member_email, member_name, member_nickname, member_phone, member_birth, member_gender, member_status)
        values (#{memberIdentification}, #{memberPassword}, #{memberEmail}, #{memberName}, #{memberNickname}, #{memberPhone}, date_format(#{memberBirth}, '%Y.%m.%d'), #{memberGender}, #{memberStatus})
    </insert>

    <select id="checkId" resultType="integer">
        select count(member_id)
        from tbl_member
        where member_identification = #{memberIdentification}
    </select>

    <select id="checkPhone" resultType="integer">
        select count(member_id)
        from tbl_member
        where member_phone = #{memberPhone}
    </select>

    <select id="checkNickname" resultType="integer">
        select count(member_id)
        from tbl_member
        where member_nickname = #{memberNickname}
    </select>

    <select id="checkEmail" resultType="integer">
        select count(member_id)
        from tbl_member
        where member_email = #{memberEmail}
    </select>

    <select id="checkStatus" resultType="integer">
        select member_status
        from tbl_member
        where member_email = #{memberEmail}
    </select>

    <select id="findId" resultType="string">
        select member_identification
        from tbl_member
        where member_phone = #{memberPhone}
    </select>

    <update id="changePassword">
        update tbl_member
        set member_password = #{memberPassword}
        where member_email = #{memberEmail}
    </update>

    <select id="selectKey" resultType="string">
        select member_random_key
        from tbl_member
        where member_email = #{memberEmail}
    </select>

    <update id="updateKey">
        update tbl_member
        set member_random_key = #{memberRandomKey}
        where member_email = #{memberEmail}
    </update>

    <!-- 회원정보 업데이트 -->
    <update id="memberUpdate">
        update tbl_member
        set member_nickname=#{memberNickname}, member_birth=#{memberBirth}
        where member_id = #{memberId}
    </update>

    <!-- 회원 프로필 사진 업데이트 -->
    <update id="memberFileUpdate">
        update tbl_member
        set member_file_original_name=#{memberFileOriginalName}, member_file_uuid=#{memberFileUuid}, member_file_path=#{memberFilePath},
            member_file_size=#{memberFileSize}, member_file_type=#{memberFileType}
        where member_id = #{memberId}
    </update>

    <!-- 회원 삭제 -->
    <delete id="delete">
        delete from tbl_member where member_id = ${memberId}
    </delete>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword">
        update tbl_member
        set member_password = #{memberPassword}
        where member_id = #{memberId}
    </update>

    <!-- 멤버의 비밀번호 중복체크 -->
    <select id="checkPassword" resultType="integer">
        select count(member_id)
        from tbl_member
        where member_password = #{memberPassword}
    </select>
</mapper>